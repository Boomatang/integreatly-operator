---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: integreatly-operator
rules:
  - apiGroups:
      - ""
    resources:
      - events
      - configmaps
      - secrets
    verbs:
      - list
      - get
      - watch
      - create
      - update
      - patch

  # For monitoring functions by operator-sdk
  - apiGroups:
      - ""
    resources:
      - services
      - services/finalizers
    verbs:
      - list
      - get
      - watch
      - create
      - update
  - apiGroups:
      - monitoring.coreos.com
    resources:
      - servicemonitors
    verbs:
      - get
      - create
  # - apiGroups:
  #     - apps
  #   resources:
  #     - deployments/finalizers
  #   resourceNames:
  #     - integreatly-operator
  #   verbs:
  #     - update
  # END For monitoring functions by operator-sdk
      
  # Our own Subscription needs to be switched into Manual mode after initial installation
  - apiGroups:
      - operators.coreos.com
    resources:
      - subscriptions
    resourceNames: 
      - integreatly
    verbs:
      - get
      - update

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: integreatly-operator-openshift
  namespace: openshift
rules:
  # Reconciling Fuse templates and image streams
  - apiGroups:
      - template.openshift.io
    resources:
      - templates
    verbs:
      - get
      - create
      - update
      - delete
  - apiGroups:
      - image.openshift.io
    resources:
      - imagestreams
    verbs:
      - get
      - create
      - delete
      - update
  # END Reconciling Fuse templates and image streams
  
  # Registry pull secret needs to be read to be then copied into some RHMI namespaces
  - apiGroups:
      - ""
    resources:
      - secrets
    resourceNames: 
      - samples-registry-credentials
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: integreatly-operator-openshift-console
  namespace: openshift-console
rules:
  - apiGroups:
      - route.openshift.io
    resources:
      - routes
    resourceNames: 
      - console
    verbs:
      - get

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: integreatly-operator-openshift-monitoring
  namespace: openshift-monitoring
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    resourceNames: 
      - grafana-datasources
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: integreatly-operator
rules:
  #FIXME: INTLY-4909 - if we are able to install in multinamespace mode, then we should be able to move this rule into a namespaced "integreatly-operator" Role
  - apiGroups:
      - integreatly.org
      - applicationmonitoring.integreatly.org
    resources:
      - "*"
    verbs:
      - "*"

  # We are using ProjectRequests API to create namespaces where we automatically become admins
  - apiGroups:
      - ''
      - project.openshift.io
    resources:
      - projectrequests
    verbs:
      - create

  # Namespace update permissions are needed for setting labels
  #FIXME: INTLY-4909 - if we are able to install in multinamespace mode, then we should be able to move this rule into a namespaced "integreatly-operator" Role
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - update
  
  # Preflights check for existing installations of products
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - list
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - get
  - apiGroups:
      - apps.openshift.io
    resources:
      - deploymentconfigs
    verbs:
      - get
  # END Preflights check for existing installations of products
    
  # Installation of product operators
  #FIXME: INTLY-4909 - if we are able to install in multinamespace mode, then we should be able to move this block of rules into a namespaced "integreatly-operator" Role
  - apiGroups:
      - operators.coreos.com
    resources:
      - catalogsources
      - operatorgroups
    verbs:
      - create
  - apiGroups:
      - operators.coreos.com
    resources:
      - catalogsources
    resourceNames:
      - rhmi-registry-cs
    verbs:
      - update
  # OperatorGroup update is not implemented yet, but might be added at a later date
  # - apiGroups:
  #     - operators.coreos.com
  #   resources:
  #     - operatorgroups
  #   resourceNames:
  #     - rhmi-registry-og
  #   verbs:
  #     - update

  - apiGroups:
      - operators.coreos.com
    resources:
      - installplans
    verbs:
      - update

  # END Installation of product operators

  # OAuthClients are used for login into products with OpenShift User identity 
  - apiGroups:
      - oauth.openshift.io
    resources:
      - oauthclients
    verbs:
      - create
      - get
      - update
      - delete
  
  # We need to known members of the dedicated-admins group to give them additional permissions in RHMI products
  - apiGroups:
      - user.openshift.io
    resources:
      - groups
    resourceNames: 
      - dedicated-admins
    verbs:
      - get
      # - watch will probably be needed in the near future

  # We create the "rhmi-developers" group and populate it with users dynamically
  - apiGroups:
      - user.openshift.io
    resources:
      - groups
    verbs:
      - create
  - apiGroups:
      - user.openshift.io
    resources:
      - groups
    resourceNames: 
      - rhmi-developers
    verbs:
      - get
      - update
      - delete
  - apiGroups:
      - user.openshift.io
    resources:
      - users
    verbs:
      - watch
      - get
      - list
  # END We create the "rhmi-developers" group and populate it with users dynamically

  # Updating the samples operator config cr to ignore fuse imagestreams and templates
  - apiGroups:
      - samples.operator.openshift.io
    resources:
      - configs
    resourceNames: 
      - cluster
    verbs:
      - get
      - update
  
  # Monitoring resources ar not covered by namespace "admin" permissions
  #FIXME: INTLY-4909 - if we are able to install in multinamespace mode, then we should be able to move this rule into a namespaced "integreatly-operator" Role
  - apiGroups:
      - monitoring.coreos.com
    resources:
      - prometheusrules
    verbs:
      - get
      - list
      - create
      - update
      - delete

  # controller-runtime cache needs cluster wide list and watch permissions
  #FIXME: INTLY-4909 - if we are able to install in multinamespace mode, then we should be able to move this block of rules into a namespaced "integreatly-operator" Role
  - apiGroups:
      - ""
    resources:
      - configmaps
      - secrets
    verbs:
      - list
      - watch
  - apiGroups:
      - operators.coreos.com
    resources:
      - subscriptions
    verbs:
      - list
      - watch
  - apiGroups:
      - aerogear.org
    resources:
      - keycloaks
      - keycloakrealms
    verbs:
      - list
      - watch
  - apiGroups:
      - push.aerogear.org
    resources:
      - unifiedpushservers
    verbs:
      - list
      - watch
  - apiGroups:
      - syndesis.io
    resources:
      - syndesises
    verbs:
      - list
      - watch
  - apiGroups:
      - admin.enmasse.io
    resources:
      - authenticationservices
      - addressplans
      - addressspaceplans
      - brokeredinfraconfigs
      # - standardinfraconfigs
      # - consoleservices
    verbs:
      - list
      - watch
  - apiGroups:
      - kafka.strimzi.io
    resources:
      - kafkas
    verbs:
      - list
      - watch
  - apiGroups:
      - org.eclipse.che
    resources:
      - checlusters
    verbs:
      - list
      - watch
  - apiGroups:
      - apps.3scale.net
    resources:
      - apimanagers
    verbs:
      - list
      - watch
  # END controller-runtime cache forced permissions
  